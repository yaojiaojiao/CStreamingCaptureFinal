#ifndef GLOBAL_DEFINES_H
#define GLOBAL_DEFINES_H
typedef struct
{
    int apirev;
    int trig_channel;                   //触发通道
    int stream_ch;
    int clock_source;                   //时钟源
    int pll_divider;
    int num_samples_collect;
    int num_sample_skip;
    int trig_mode;

    unsigned int buffers_filled;
    unsigned int collect_result;
    int num_buffers;			         //Number of buffers
    int size_buffers;			         //Size of each buffer
    signed short* data_stream_target;

    FILE* outfileA = NULL;
    FILE* outfileB = NULL;
}setupADQ;

union PSD_DATA
{
    quint64 data64;
    ushort  pos[4];
};

static const unsigned short BitReverseIndex[] =
{
    512, 768, 640, 896, 576, 832, 704, 960, 544, 800, 672, 928, 608, 864, 736, 992,
    528, 784, 656, 912, 592, 848, 720, 976, 560, 816, 688, 944, 624, 880, 752, 1008,
    520, 776, 648, 904, 584, 840, 712, 968, 552, 808, 680, 936, 616, 872, 744, 1000,
    536, 792, 664, 920, 600, 856, 728, 984, 568, 824, 696, 952, 632, 888, 760, 1016,
    516, 772, 644, 900, 580, 836, 708, 964, 548, 804, 676, 932, 612, 868, 740, 996,
    532, 788, 660, 916, 596, 852, 724, 980, 564, 820, 692, 948, 628, 884, 756, 1012,
    524, 780, 652, 908, 588, 844, 716, 972, 556, 812, 684, 940, 620, 876, 748, 1004,
    540, 796, 668, 924, 604, 860, 732, 988, 572, 828, 700, 956, 636, 892, 764, 1020,
    514, 770, 642, 898, 578, 834, 706, 962, 546, 802, 674, 930, 610, 866, 738, 994,
    530, 786, 658, 914, 594, 850, 722, 978, 562, 818, 690, 946, 626, 882, 754, 1010,
    522, 778, 650, 906, 586, 842, 714, 970, 554, 810, 682, 938, 618, 874, 746, 1002,
    538, 794, 666, 922, 602, 858, 730, 986, 570, 826, 698, 954, 634, 890, 762, 1018,
    518, 774, 646, 902, 582, 838, 710, 966, 550, 806, 678, 934, 614, 870, 742, 998,
    534, 790, 662, 918, 598, 854, 726, 982, 566, 822, 694, 950, 630, 886, 758, 1014,
    526, 782, 654, 910, 590, 846, 718, 974, 558, 814, 686, 942, 622, 878, 750, 1006,
    542, 798, 670, 926, 606, 862, 734, 990, 574, 830, 702, 958, 638, 894, 766, 1022,
    513, 769, 641, 897, 577, 833, 705, 961, 545, 801, 673, 929, 609, 865, 737, 993,
    529, 785, 657, 913, 593, 849, 721, 977, 561, 817, 689, 945, 625, 881, 753, 1009,
    521, 777, 649, 905, 585, 841, 713, 969, 553, 809, 681, 937, 617, 873, 745, 1001,
    537, 793, 665, 921, 601, 857, 729, 985, 569, 825, 697, 953, 633, 889, 761, 1017,
    517, 773, 645, 901, 581, 837, 709, 965, 549, 805, 677, 933, 613, 869, 741, 997,
    533, 789, 661, 917, 597, 853, 725, 981, 565, 821, 693, 949, 629, 885, 757, 1013,
    525, 781, 653, 909, 589, 845, 717, 973, 557, 813, 685, 941, 621, 877, 749, 1005,
    541, 797, 669, 925, 605, 861, 733, 989, 573, 829, 701, 957, 637, 893, 765, 1021,
    515, 771, 643, 899, 579, 835, 707, 963, 547, 803, 675, 931, 611, 867, 739, 995,
    531, 787, 659, 915, 595, 851, 723, 979, 563, 819, 691, 947, 627, 883, 755, 1011,
    523, 779, 651, 907, 587, 843, 715, 971, 555, 811, 683, 939, 619, 875, 747, 1003,
    539, 795, 667, 923, 603, 859, 731, 987, 571, 827, 699, 955, 635, 891, 763, 1019,
    519, 775, 647, 903, 583, 839, 711, 967, 551, 807, 679, 935, 615, 871, 743, 999,
    535, 791, 663, 919, 599, 855, 727, 983, 567, 823, 695, 951, 631, 887, 759, 1015,
    527, 783, 655, 911, 591, 847, 719, 975, 559, 815, 687, 943, 623, 879, 751, 1007,
    543, 799, 671, 927, 607, 863, 735, 991, 575, 831, 703, 959, 639, 895, 767, 1023
    };
#endif // GLOBAL_DEFINES_H
